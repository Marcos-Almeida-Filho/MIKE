/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Geral;

import DAO.OPDAO;
import DAO.OPMPDAO;
import DAO.ServicoMateriaisDAO;
import DAO.VendasMateriaisDAO;
import View.administracao.relatorios.RelatorioVendaDeProduto;
import View.comercial.CategoriaDePreco;
import View.servicos.OS;
import View.vendas.EscolherMP;
import View.vendas.OP;
import View.vendas.ProcessoOP;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos Filho
 */
public class ProcurarMaterial extends javax.swing.JInternalFrame {

    /**
     * Creates new form ProcuraMaterialVenda
     */
    private static String origem;

    static ServicoMateriaisDAO smd = new ServicoMateriaisDAO();
    static VendasMateriaisDAO vmd = new VendasMateriaisDAO();
    static OPMPDAO ompd = new OPMPDAO();
    static OPDAO od = new OPDAO();

    public ProcurarMaterial(String origin) {
        initComponents();
        origem = origin;
        readtablemateriais();
    }

    public static void readtablemateriais() {
        DefaultTableModel model = (DefaultTableModel) tablemateriais.getModel();
        model.setNumRows(0);

        switch (origem) {
            default:
                vmd.readStatus("Ativo").forEach(vmb -> {
                    model.addRow(new Object[]{
                        vmb.getId(),
                        vmb.getCodigo(),
                        vmb.getDescricao(),
                        vmb.getQtdMinimaOP(),
                        vmb.getEstoque()
                    });
                });
                break;
            case "OS":
                smd.read().forEach(smb -> {
                    model.addRow(new Object[]{
                        smb.getId(),
                        smb.getCodigo(),
                        smb.getDescricao(),
                        0,
                        smb.getEstoque()
                    });
                });
                break;
            case "CategoriaDePreco":
                smd.read().forEach(smb -> {
                    model.addRow(new Object[]{
                        smb.getId(),
                        smb.getCodigo(),
                        smb.getDescricao(),
                        0,
                        smb.getEstoque()
                    });
                });
                break;
            case "CotacaoServico":
                smd.read().forEach(smb -> {
                    model.addRow(new Object[]{
                        smb.getId(),
                        smb.getCodigo(),
                        smb.getDescricao(),
                        0,
                        smb.getEstoque()
                    });
                });
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablemateriais = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtpesquisa = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setTitle("Procurar Material");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablemateriais.setAutoCreateRowSorter(true);
        tablemateriais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código", "Descrição", "QtdMinima", "Estoque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablemateriais.setName("tablemateriais"); // NOI18N
        tablemateriais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablemateriaisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablemateriais);
        if (tablemateriais.getColumnModel().getColumnCount() > 0) {
            tablemateriais.getColumnModel().getColumn(0).setMinWidth(50);
            tablemateriais.getColumnModel().getColumn(0).setPreferredWidth(50);
            tablemateriais.getColumnModel().getColumn(0).setMaxWidth(50);
            tablemateriais.getColumnModel().getColumn(1).setMinWidth(250);
            tablemateriais.getColumnModel().getColumn(1).setPreferredWidth(250);
            tablemateriais.getColumnModel().getColumn(1).setMaxWidth(500);
            tablemateriais.getColumnModel().getColumn(3).setMinWidth(0);
            tablemateriais.getColumnModel().getColumn(3).setPreferredWidth(0);
            tablemateriais.getColumnModel().getColumn(3).setMaxWidth(0);
            tablemateriais.getColumnModel().getColumn(4).setMinWidth(70);
            tablemateriais.getColumnModel().getColumn(4).setPreferredWidth(70);
            tablemateriais.getColumnModel().getColumn(4).setMaxWidth(70);
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));
        jPanel2.setName("jPanel2"); // NOI18N

        txtpesquisa.setName("txtpesquisa"); // NOI18N
        txtpesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpesquisaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtpesquisa)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablemateriaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablemateriaisMouseClicked
        if (evt.getClickCount() == 2) {
            int idmaterial = Integer.parseInt(tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 0).toString());
            String codigo = tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 1).toString();
            String desc = tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 2).toString();
            String qtd = tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 3).toString();
            switch (origem) {
                case "OS":
                    OS.txtcodigo.setText(codigo);
                    OS.txtdesc.setText(desc);
                    break;
                case "CategoriaDePreco":
                    DefaultTableModel model = (DefaultTableModel) CategoriaDePreco.tableferramentas.getModel();
                    model.addRow(new Object[]{
                        "",
                        codigo,
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    });
                    break;
                case "CotacaoVenda":
                    ItemCotacao.idMaterial = Integer.parseInt(tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 0).toString());
                    ItemCotacao.txtcodigo.setText(codigo);
                    ItemCotacao.txtdesc.setText(desc);
                    break;
                case "CotacaoServico":
                    ItemCotacao.idMaterial = Integer.parseInt(tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 0).toString());
                    ItemCotacao.txtcodigo.setText(codigo);
                    ItemCotacao.txtdesc.setText(desc);
                    break;
                case "PedidoVenda":
                    ItemPedido.txtcodigo.setText(codigo);
                    ItemPedido.txtdesc.setText(desc);
                    ItemPedido.idMaterial = Integer.parseInt(tablemateriais.getValueAt(tablemateriais.getSelectedRow(), 0).toString());
                    break;
                case "EscolherMP":
                    EscolherMP.txtCodigo.setText(codigo);
                    EscolherMP.txtDesc.setText(desc);
                    EscolherMP.idMP = idmaterial;
                    break;
                case "OP":
                    OP.TxtCodigo.setText(codigo);
                    OP.TxtDescricao.setText(desc);
                    OP.TxtQtde.setText(qtd);
                    break;
                case "ProcessoOP":
                    od.updateMaterialOP(OP.txtNumOP.getText(), idmaterial, codigo, desc);
                    ProcessoOP.criarProximoProcesso();
                    break;
                case "RelatorioVendaDeProduto":
                    RelatorioVendaDeProduto.txtProduto.setText(codigo);
                    RelatorioVendaDeProduto.idMaterial = idmaterial;
                    break;
            }
            dispose();
        }
    }//GEN-LAST:event_tablemateriaisMouseClicked

    private void txtpesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisaKeyReleased
        DefaultTableModel model = (DefaultTableModel) tablemateriais.getModel();
        model.setNumRows(0);

        switch (origem) {
            case "CotacaoServico":
                smd.pesquisa(txtpesquisa.getText()).forEach(smb -> {
                    model.addRow(new Object[]{
                        smb.getId(),
                        smb.getCodigo(),
                        smb.getDescricao(),
                        0,
                        smb.getEstoque()
                    });
                });
                break;
            default:
                vmd.readTodosPesquisa(txtpesquisa.getText()).forEach(vmb -> {
                    model.addRow(new Object[]{
                        vmb.getId(),
                        vmb.getCodigo(),
                        vmb.getDescricao(),
                        vmb.getQtdMinimaOP(),
                        vmb.getEstoque()
                    });
                });
                break;
        }
    }//GEN-LAST:event_txtpesquisaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tablemateriais;
    public javax.swing.JTextField txtpesquisa;
    // End of variables declaration//GEN-END:variables
}

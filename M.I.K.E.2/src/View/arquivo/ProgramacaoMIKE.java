/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.arquivo;

import Bean.ProgramacaoBean;
import Connection.Session;
import DAO.ProgramacaoDAO;
import Methods.Dates;
import Methods.Telas;
import View.Geral.AlterarStatus;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos Filho
 */
public class ProgramacaoMIKE extends javax.swing.JInternalFrame {

    /**
     * Creates new form ProgramacaoMIKE
     */
    static ProgramacaoDAO pd = new ProgramacaoDAO();
    ProgramacaoBean pb = new ProgramacaoBean();

    static String datainicio = "";
    static String datatermino = "";

    public ProgramacaoMIKE() {
        initComponents();
        checkUser();
        readProgramacao();
    }

    public static void checkUser() {
        if (Session.nome.equals("Marcos Antonio de Almeida Filho")) {
            btnAdicionarItemProgramacao.setEnabled(true);
            btnSalvar.setEnabled(true);
            btnAlterarStatus.setEnabled(true);
        }
    }

    public static void readProgramacao() {
        DefaultTableModel model = (DefaultTableModel) tableProgramacao.getModel();
        model.setNumRows(0);

        int index = cbStatus.getSelectedIndex();

        switch (index) {
            case 0:
                pd.read().forEach(pb -> {
                    if (!Dates.TransformarDataCurtaDoDB(pb.getDataInicio()).equals("00/00/0000")) {
                        datainicio = Dates.TransformarDataCurtaDoDB(pb.getDataInicio());
                    } else {
                        datainicio = "";
                    }
                    if (!Dates.TransformarDataCurtaDoDB(pb.getDataTermino()).equals("00/00/0000")) {
                        datatermino = Dates.TransformarDataCurtaDoDB(pb.getDataTermino());
                    } else {
                        datatermino = "";
                    }
                    model.addRow(new Object[]{
                        pb.getId(),
                        false,
                        pb.getNome(),
                        Dates.TransformarDataCurtaDoDB(pb.getDataProgramada()),
                        datainicio,
                        datatermino,
                        pb.getStatus()
                    });
                });
                break;
            default:
                pd.readStatus(cbStatus.getSelectedItem().toString()).forEach(pb -> {
                    if (!Dates.TransformarDataCurtaDoDB(pb.getDataInicio()).equals("00/00/0000")) {
                        datainicio = Dates.TransformarDataCurtaDoDB(pb.getDataInicio());
                    } else {
                        datainicio = "";
                    }
                    if (!Dates.TransformarDataCurtaDoDB(pb.getDataTermino()).equals("00/00/0000")) {
                        datatermino = Dates.TransformarDataCurtaDoDB(pb.getDataTermino());
                    } else {
                        datatermino = "";
                    }
                    model.addRow(new Object[]{
                        pb.getId(),
                        false,
                        pb.getNome(),
                        Dates.TransformarDataCurtaDoDB(pb.getDataProgramada()),
                        datainicio,
                        datatermino,
                        pb.getStatus()
                    });
                });
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProgramacao = new javax.swing.JTable();
        btnAdicionarItemProgramacao = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cbStatus = new javax.swing.JComboBox<>();
        btnAlterarStatus = new javax.swing.JButton();

        setClosable(true);
        setTitle("Programação MIKE");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tableProgramacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "", "Item", "Data Programada", "Data de Início", "Data de Término", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProgramacao.setName("tableProgramacao"); // NOI18N
        tableProgramacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProgramacaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProgramacao);
        if (tableProgramacao.getColumnModel().getColumnCount() > 0) {
            tableProgramacao.getColumnModel().getColumn(0).setMinWidth(0);
            tableProgramacao.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableProgramacao.getColumnModel().getColumn(0).setMaxWidth(0);
            tableProgramacao.getColumnModel().getColumn(1).setMinWidth(35);
            tableProgramacao.getColumnModel().getColumn(1).setPreferredWidth(35);
            tableProgramacao.getColumnModel().getColumn(1).setMaxWidth(35);
            tableProgramacao.getColumnModel().getColumn(3).setMinWidth(120);
            tableProgramacao.getColumnModel().getColumn(3).setPreferredWidth(120);
            tableProgramacao.getColumnModel().getColumn(3).setMaxWidth(120);
            tableProgramacao.getColumnModel().getColumn(4).setMinWidth(120);
            tableProgramacao.getColumnModel().getColumn(4).setPreferredWidth(120);
            tableProgramacao.getColumnModel().getColumn(4).setMaxWidth(120);
            tableProgramacao.getColumnModel().getColumn(5).setMinWidth(120);
            tableProgramacao.getColumnModel().getColumn(5).setPreferredWidth(120);
            tableProgramacao.getColumnModel().getColumn(5).setMaxWidth(120);
            tableProgramacao.getColumnModel().getColumn(6).setMinWidth(100);
            tableProgramacao.getColumnModel().getColumn(6).setPreferredWidth(100);
            tableProgramacao.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        btnAdicionarItemProgramacao.setText("Adicionar Item");
        btnAdicionarItemProgramacao.setEnabled(false);
        btnAdicionarItemProgramacao.setName("btnAdicionarItemProgramacao"); // NOI18N
        btnAdicionarItemProgramacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemProgramacaoActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.setName("btnSalvar"); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));
        jPanel2.setName("jPanel2"); // NOI18N

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Em Aberto", "Planejado", "Fazendo", "Cancelado", "Paralizado", "Finalizado" }));
        cbStatus.setName("cbStatus"); // NOI18N
        cbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbStatus, 0, 203, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnAlterarStatus.setText("Alterar Status");
        btnAlterarStatus.setEnabled(false);
        btnAlterarStatus.setName("btnAlterarStatus"); // NOI18N
        btnAlterarStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 845, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAdicionarItemProgramacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterarStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalvar)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarItemProgramacao)
                    .addComponent(btnSalvar)
                    .addComponent(btnAlterarStatus))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarItemProgramacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemProgramacaoActionPerformed
        AdicionarProgramacao ap = new AdicionarProgramacao();
        Telas.AparecerTela(ap);
    }//GEN-LAST:event_btnAdicionarItemProgramacaoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        for (int i = 0; i < tableProgramacao.getRowCount(); i++) {
            if (tableProgramacao.getValueAt(i, 0).equals("")) {
                pb.setNome(tableProgramacao.getValueAt(i, 2).toString());
                pb.setDataProgramada(Dates.CriarDataCurtaDBComDataExistente(tableProgramacao.getValueAt(i, 3).toString()));
                pb.setDataInicio("0000-00-00");
                pb.setDataTermino("0000-00-00");
                pb.setStatus("Planejado");

                //nome, dataprogramada, datainicio, datatermino, status
                pd.create(pb);
            }
        }
        JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
        readProgramacao();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void tableProgramacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProgramacaoMouseClicked
        if (Session.nome.equals("Marcos Antonio de Almeida Filho")) {
            int selectedRow = tableProgramacao.getSelectedRow();
            int id = Integer.parseInt(tableProgramacao.getValueAt(selectedRow, 0).toString());

            if (evt.getClickCount() == 2) {
                if (tableProgramacao.getValueAt(selectedRow, 4).equals("")) {
                    int resp = JOptionPane.showConfirmDialog(null, "Deseja iniciar " + tableProgramacao.getValueAt(selectedRow, 2).toString() + "?", "Iniciar", JOptionPane.YES_NO_OPTION);
                    if (resp == 0) {
                        pb.setDataInicio(Dates.CriarDataCurtaDBSemDataExistente());
                        pb.setId(id);

                        //datainicio = ? WHERE id = ?
                        pd.updateInicio(pb);
                    }
                } else if (tableProgramacao.getValueAt(selectedRow, 5).equals("")) {
                    int resp = JOptionPane.showConfirmDialog(null, "Desejar finalizar " + tableProgramacao.getValueAt(selectedRow, 2).toString() + "?", "Finalizar", JOptionPane.YES_NO_OPTION);
                    if (resp == 0) {
                        pb.setDataTermino(Dates.CriarDataCurtaDBSemDataExistente());
                        pb.setId(id);

                        //datatermino = ?, status = 'Finalizado' WHERE id = ?
                        pd.updateFinal(pb);
                    }
                }
                readProgramacao();
            }
        }
    }//GEN-LAST:event_tableProgramacaoMouseClicked

    private void btnAlterarStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarStatusActionPerformed
        int numtrue = 0;
        int row = 0;

        for (int i = 0; i < tableProgramacao.getRowCount(); i++) {
            if (tableProgramacao.getValueAt(i, 1).equals(true)) {
                numtrue++;
                row = i;
            }
        }

        if (numtrue == 0) {
            JOptionPane.showMessageDialog(null, "Nenhum registro selecionado.");
        } else if (numtrue > 1) {
            JOptionPane.showMessageDialog(null, "Selecione somente 1 registro.");
        } else {
            AlterarStatus as = new AlterarStatus();
            Telas.AparecerTela(as);
            as.id = Integer.parseInt(tableProgramacao.getValueAt(row, 0).toString());
            AlterarStatus.cbStatus.addItem("Planejado");
            AlterarStatus.cbStatus.addItem("Fazendo");
            AlterarStatus.cbStatus.addItem("Cancelado");
            AlterarStatus.cbStatus.addItem("Paralizado");
            AlterarStatus.cbStatus.addItem("Finalizado");
            AlterarStatus.origem = this.getClass().getSimpleName();
        }
    }//GEN-LAST:event_btnAlterarStatusActionPerformed

    private void cbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusActionPerformed
        readProgramacao();
    }//GEN-LAST:event_cbStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAdicionarItemProgramacao;
    public static javax.swing.JButton btnAlterarStatus;
    public static javax.swing.JButton btnSalvar;
    public static javax.swing.JComboBox<String> cbStatus;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tableProgramacao;
    // End of variables declaration//GEN-END:variables
}

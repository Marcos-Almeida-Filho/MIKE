/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.compras;

import View.Geral.AdicionarInsumoSolicitacaoCompras;
import Connection.Session;
import DAO.ComprasSolicitacaoDAO;
import DAO.ComprasSolicitacaoItensDAO;
import DAO.ComprasSolicitacaoObsDAO;
import DAO.TiposInsumoDAO;
import Methods.Dates;
import Methods.SendEmail;
import Methods.Telas;
import View.Geral.AdicionarObs;
import View.Geral.ProcurarUser;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos Filho
 */
public class ComprasSolicitacao extends javax.swing.JInternalFrame {

    //DAO para salvar nova solicitação
    static ComprasSolicitacaoDAO csd = new ComprasSolicitacaoDAO();

    //DAO para salvar itens
    ComprasSolicitacaoItensDAO csid = new ComprasSolicitacaoItensDAO();

    //DAO para salvar observações
    ComprasSolicitacaoObsDAO csod = new ComprasSolicitacaoObsDAO();

    static TiposInsumoDAO tid = new TiposInsumoDAO();

    int idSolicitacao = 0;

    static DefaultTableModel modelSolicitacoes, modelItens, modelObs;

    static String solicitanteOriginal, tipoOriginal;
    static int obsOriginal, itensOriginal;

    /**
     * Creates new form ComprasSolicitacao
     */
    public ComprasSolicitacao() {
        initComponents();

        modelSolicitacoes = (DefaultTableModel) tablesolicitacao.getModel();
        modelItens = (DefaultTableModel) tableItens.getModel();
        modelObs = (DefaultTableModel) tableobs.getModel();

        readSolicitacoes();
        tiposdeinsumo();
    }

    public static void valoresOriginal() {
        solicitanteOriginal = txtsolicitante.getText();
        tipoOriginal = cbtipo.getSelectedItem().toString();
        obsOriginal = tableobs.getRowCount();
        itensOriginal = tableItens.getRowCount();
    }

    public static void readSolicitacoes() {
        //Zerar linhas na Tablesolicitacao
        modelSolicitacoes.setNumRows(0);

        //Ler dados
        csd.read().forEach((csb) -> {
            modelSolicitacoes.addRow(new Object[]{
                csb.getId(),
                false,
                csb.getSolicitacao(),
                csb.getTipo(),
                csb.getSolicitante(),
                csb.getStatus()
            });
        });

        txtsolicitante.setText(Session.nome);
    }

    public static void travacampos() {
        if (txtstatus.getText().equals("Aprovado")) {
            cbtipo.setEnabled(false);
        }
        if (txtstatus.getText().equals("Cancelado")) {
            cbtipo.setEnabled(false);
        }
    }

    public static void tiposdeinsumo() {
        tid.read().forEach(tib -> {
            cbtipo.addItem(tib.getNome());
        });
    }

    public void lerSolicitacao(int idSolicitacao) {
        csd.click(idSolicitacao).forEach(csb -> {
            txtNumeroSolicitacao.setText(csb.getSolicitacao());
            txtdata.setText(Dates.TransformarDataCurtaDoDB(csb.getData()));
            txtstatus.setText(csb.getStatus());
            txtsolicitante.setText(csb.getSolicitante());
            cbtipo.setSelectedItem(csb.getTipo());
        });

        lerObs(idSolicitacao);

        lerItens(idSolicitacao);

        //Ver status e travar campos se necessário
        travacampos();
    }

    public void lerObs(int idSolicitacao) {
        modelObs.setNumRows(0);

        csod.read(idSolicitacao).forEach(csob -> {
            modelObs.addRow(new Object[]{
                csob.getId(),
                false,
                Dates.TransformarDataCurtaDoDB(csob.getData()),
                csob.getFuncionario(),
                csob.getObs()
            });
        });
    }

    public void lerItens(int idSolicitacao) {
        modelItens.setNumRows(0);

        csid.read(idSolicitacao).forEach(csib -> {
            modelItens.addRow(new Object[]{
                csib.getId(),
                false,
                csib.getItem(),
                csib.getQtd(),
                csib.getUnidade(),
                csib.getObs(),
                csib.getPedido()
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabsolicitacao = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtpesquisa = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        cbstatus = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablesolicitacao = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNumeroSolicitacao = new javax.swing.JTextField();
        txtstatus = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtsolicitante = new javax.swing.JTextField();
        cbtipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tabsolicitacaointerna = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableobs = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableItens = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnAll = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        txtdata = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Solicitação de Compra");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));

        txtpesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpesquisaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtpesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        cbstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Em Aberto", "Aprovado", "Cancelado", "Todos" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablesolicitacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "", "Solicitação", "Tipo de Solicitação", "Solicitante", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablesolicitacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesolicitacaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablesolicitacao);
        if (tablesolicitacao.getColumnModel().getColumnCount() > 0) {
            tablesolicitacao.getColumnModel().getColumn(0).setMinWidth(0);
            tablesolicitacao.getColumnModel().getColumn(0).setPreferredWidth(0);
            tablesolicitacao.getColumnModel().getColumn(0).setMaxWidth(0);
            tablesolicitacao.getColumnModel().getColumn(1).setMinWidth(40);
            tablesolicitacao.getColumnModel().getColumn(1).setPreferredWidth(40);
            tablesolicitacao.getColumnModel().getColumn(1).setMaxWidth(40);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 259, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabsolicitacao.addTab("Lista de Solicitações", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Nº");

        txtNumeroSolicitacao.setEditable(false);
        txtNumeroSolicitacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtstatus.setEditable(false);
        txtstatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setText("Status");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel3.setText("Solicitante");

        txtsolicitante.setEditable(false);

        cbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));

        jLabel4.setText("Tipo de Material a Comprar");

        jButton6.setText("Alterar Solicitante");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtsolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbtipo, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtsolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Novo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        tableobs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "", "Data", "Funcionário", "Observação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableobs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableobsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableobs);
        if (tableobs.getColumnModel().getColumnCount() > 0) {
            tableobs.getColumnModel().getColumn(0).setMinWidth(0);
            tableobs.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableobs.getColumnModel().getColumn(0).setMaxWidth(0);
            tableobs.getColumnModel().getColumn(1).setMinWidth(35);
            tableobs.getColumnModel().getColumn(1).setPreferredWidth(35);
            tableobs.getColumnModel().getColumn(1).setMaxWidth(35);
            tableobs.getColumnModel().getColumn(2).setMinWidth(75);
            tableobs.getColumnModel().getColumn(2).setPreferredWidth(75);
            tableobs.getColumnModel().getColumn(2).setMaxWidth(75);
            tableobs.getColumnModel().getColumn(3).setMinWidth(200);
            tableobs.getColumnModel().getColumn(3).setPreferredWidth(200);
            tableobs.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        jButton5.setText("Adicionar Observação");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Excluir Observação");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        tabsolicitacaointerna.addTab("Observações", jPanel6);

        tableItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "", "Item", "Qtd", "UN", "Observação", "Cotação de Compra"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableItens);
        if (tableItens.getColumnModel().getColumnCount() > 0) {
            tableItens.getColumnModel().getColumn(0).setMinWidth(0);
            tableItens.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableItens.getColumnModel().getColumn(0).setMaxWidth(0);
            tableItens.getColumnModel().getColumn(1).setMinWidth(40);
            tableItens.getColumnModel().getColumn(1).setPreferredWidth(40);
            tableItens.getColumnModel().getColumn(1).setMaxWidth(40);
            tableItens.getColumnModel().getColumn(2).setMinWidth(250);
            tableItens.getColumnModel().getColumn(2).setPreferredWidth(250);
            tableItens.getColumnModel().getColumn(2).setMaxWidth(250);
            tableItens.getColumnModel().getColumn(3).setMinWidth(70);
            tableItens.getColumnModel().getColumn(3).setPreferredWidth(70);
            tableItens.getColumnModel().getColumn(3).setMaxWidth(70);
            tableItens.getColumnModel().getColumn(4).setMinWidth(70);
            tableItens.getColumnModel().getColumn(4).setPreferredWidth(70);
            tableItens.getColumnModel().getColumn(4).setMaxWidth(70);
            tableItens.getColumnModel().getColumn(6).setMinWidth(130);
            tableItens.getColumnModel().getColumn(6).setPreferredWidth(130);
            tableItens.getColumnModel().getColumn(6).setMaxWidth(130);
        }

        jButton3.setText("Incluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Excluir");

        btnAll.setText("Selecionar Todos");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });

        jButton8.setText("Aprovar Itens");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(btnAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1028, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(btnAll)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        tabsolicitacaointerna.addTab("Itens", jPanel7);

        txtdata.setEditable(false);
        txtdata.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setText("Data de Criação");

        jButton9.setText("Alterações");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabsolicitacaointerna)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumeroSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdata, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNumeroSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabsolicitacaointerna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton9))
                .addContainerGap())
        );

        tabsolicitacao.addTab("Solicitação", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsolicitacao)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsolicitacao)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablesolicitacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesolicitacaoMouseClicked
        if (evt.getClickCount() == 2) {
            //Mudar tabsolicitacao
            tabsolicitacao.setSelectedIndex(1);

            //Colocar a tabnotes na frente caso não estivesse
            tabsolicitacaointerna.setSelectedIndex(0);

            idSolicitacao = Integer.parseInt(tablesolicitacao.getValueAt(tablesolicitacao.getSelectedRow(), 0).toString());

            lerSolicitacao(idSolicitacao);

            valoresOriginal();
        }
    }//GEN-LAST:event_tablesolicitacaoMouseClicked

    private void txtpesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisaKeyReleased
        //Zerar linhas na tablesolicitacao
        DefaultTableModel model = (DefaultTableModel) tablesolicitacao.getModel();
        model.setNumRows(0);

        //Colocar itens com os dados digitados na pesquisa
        csd.pesquisa(txtpesquisa.getText()).forEach(csb -> {
            model.addRow(new Object[]{
                csb.getId(),
                false,
                csb.getSolicitacao(),
                csb.getTipo(),
                csb.getSolicitante(),
                csb.getStatus()
            });
        });
    }//GEN-LAST:event_txtpesquisaKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (cbtipo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione o tipo de material");
            cbtipo.showPopup();
        } else if (tableItens.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Adicione um item à solicitação.");
        } else {
            if (idSolicitacao == 0) {//Se for uma solicitação nova
                try {
                    //Dados para criar nova solicitação
                    String solicitacao = csd.solicitacaoAtual();
                    String data = Dates.CriarDataCurtaDBSemDataExistente();

                    txtNumeroSolicitacao.setText(solicitacao);

                    //Criar Solicitação de Compra
                    csd.create(solicitacao, data, txtsolicitante.getText(), cbtipo.getSelectedItem().toString());

                    idSolicitacao = csd.idSolicitacao(solicitacao);

                    //Criar Itens da Solicitação de Compra
                    for (int i = 0; i < tableItens.getRowCount(); i++) {
                        csid.create(idSolicitacao, tableItens.getValueAt(i, 2).toString(), tableItens.getValueAt(i, 4).toString(), Double.parseDouble(tableItens.getValueAt(i, 3).toString()), tableItens.getValueAt(i, 5).toString());
                    }

                    //Criar Observações da Solicitação de Compra
                    for (int i = 0; i < tableobs.getRowCount(); i++) {
                        csod.create(idSolicitacao, Dates.CriarDataCurtaDBComDataExistente(tableobs.getValueAt(i, 2).toString()), tableobs.getValueAt(i, 3).toString(), tableobs.getValueAt(i, 4).toString());
                    }

                    JOptionPane.showMessageDialog(null, "Solicitação de Compra salva com sucesso!");
                } catch (SQLException e) {
                    String msg = "Erro ao criar Solicitação de Compras.";
                    JOptionPane.showMessageDialog(null, msg + "\n" + "Enviando e-mail para suporte.");

                    new Thread() {
                        @Override
                        public void run() {
                            SendEmail.EnviarErro2(msg, e);
                        }
                    }.start();
                }
            } else { //Se a solicitação já existir
                try {
                    //Atualizar Solicitação de Compra
                    csd.update(txtsolicitante.getText(), cbtipo.getSelectedItem().toString(), idSolicitacao);

                    //Dados para criar os itens
                    for (int i = 0; i < tableItens.getRowCount(); i++) {
                        if (tableItens.getValueAt(i, 0).equals("")) {
                            csid.create(idSolicitacao, tableItens.getValueAt(i, 2).toString(), tableItens.getValueAt(i, 4).toString(), Double.parseDouble(tableItens.getValueAt(i, 3).toString()), tableItens.getValueAt(i, 5).toString());
                        } else {
                            csid.update(tableItens.getValueAt(i, 2).toString(), tableItens.getValueAt(i, 4).toString(), Double.parseDouble(tableItens.getValueAt(i, 3).toString()), tableItens.getValueAt(i, 5).toString(), Integer.parseInt(tableItens.getValueAt(i, 0).toString()));
                        }
                    }

                    //Criar Observações
                    for (int i = 0; i < tableobs.getRowCount(); i++) {
                        if (tableobs.getValueAt(i, 0).equals("")) {
                            csod.create(idSolicitacao, Dates.CriarDataCurtaDBComDataExistente(tableobs.getValueAt(i, 2).toString()), tableobs.getValueAt(i, 3).toString(), tableobs.getValueAt(i, 4).toString());
                        }
                    }

                    JOptionPane.showMessageDialog(null, "Solicitação de Compra atualizada com sucesso.");
                } catch (SQLException e) {
                    String msg = "Erro ao atualizar Solicitação de Compra.";
                    JOptionPane.showMessageDialog(null, msg + "\n" + "Enviando e-mail para suporte");

                    new Thread() {
                        @Override
                        public void run() {
                            SendEmail.EnviarErro2(msg, e);
                        }
                    }.start();
                }
                valoresOriginal();
            }
            lerSolicitacao(idSolicitacao);
            readSolicitacoes();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (cbtipo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de material.");
            cbtipo.showPopup();
        } else {
            AdicionarInsumoSolicitacaoCompras aisc = new AdicionarInsumoSolicitacaoCompras(cbtipo.getSelectedItem().toString());
            Telas.AparecerTela(aisc);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ProcurarUser pu = new ProcurarUser("ComprasSolicitacao");
        Telas.AparecerTela(pu);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        AdicionarObs ao = new AdicionarObs(this.getClass().getSimpleName());
        Telas.AparecerTela(ao);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tableobsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableobsMouseClicked
        if (tableobs.getSelectedColumn() == 1) {
            if (!tableobs.getValueAt(tableobs.getSelectedRow(), 3).toString().equals(Session.nome)) {
                JOptionPane.showMessageDialog(null, "Usuário diferente do usuário que fez a observação.");
                tableobs.setValueAt(false, tableobs.getSelectedRow(), 1);
            }
        }
    }//GEN-LAST:event_tableobsMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int numTrue = 0;
        for (int i = 0; i < tableobs.getRowCount(); i++) {
            if (tableobs.getValueAt(i, 1).equals(true)) {
                numTrue++;
            }
        }

        if (numTrue == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma observação selecionada.");
        } else {
            int resp = JOptionPane.showConfirmDialog(null, "Deseja excluir as observações selecionadas?", "Excluir Observações", JOptionPane.YES_NO_OPTION);

            if (resp == 0) {
                for (int i = 0; i < tableobs.getRowCount(); i++) {
                    if (tableobs.getValueAt(i, 1).equals(true)) {
                        int id = Integer.parseInt(tableobs.getValueAt(i, 0).toString());
                        csod.delete(id);
                    }
                }
                lerObs(idSolicitacao);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "Deseja criar uma nova Solicitação de Compras?", "Nova Solicitação", JOptionPane.YES_NO_OPTION);

        if (resp == 0) {
            idSolicitacao = 0;

            txtNumeroSolicitacao.setText("");
            txtdata.setText("");
            txtstatus.setText("");
            txtsolicitante.setText("");
            cbtipo.setSelectedIndex(0);

            modelObs.setNumRows(0);
            modelItens.setNumRows(0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int numTrue = 0;

        for (int i = 0; i < tableItens.getRowCount(); i++) {
            if (tableItens.getValueAt(i, 1).equals(true)) {
                numTrue++;
            }
        }

        if (numTrue == 0) {
            JOptionPane.showMessageDialog(null, "Nenhum item selecionado");
        } else if (!solicitanteOriginal.equals(txtsolicitante.getText()) || !tipoOriginal.equals(cbtipo.getSelectedItem().toString()) || tableobs.getRowCount() != obsOriginal || itensOriginal != tableItens.getRowCount()) {
            JOptionPane.showMessageDialog(null, "Salve as alterações primeiro.");
        } else {
            for (int i = 0; i < tableItens.getRowCount(); i++) {
                if (tableItens.getValueAt(i, 1).equals(true)) {
                    
                }
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        if (btnAll.getText().equals("Selecionar Todos")) {
            for (int i = 0; i < tableItens.getRowCount(); i++) {
                tableItens.setValueAt(true, i, 1);
                btnAll.setText("Desmarcar Todos");
            }
        } else {
            for (int i = 0; i < tableItens.getRowCount(); i++) {
                tableItens.setValueAt(false, i, 1);
                btnAll.setText("Selecionar Todos");
            }
        }
    }//GEN-LAST:event_btnAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAll;
    public static javax.swing.JComboBox<String> cbstatus;
    public static javax.swing.JComboBox<String> cbtipo;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    public javax.swing.JButton jButton6;
    public javax.swing.JButton jButton7;
    public javax.swing.JButton jButton8;
    public javax.swing.JButton jButton9;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTable tableItens;
    public static javax.swing.JTable tableobs;
    public static javax.swing.JTable tablesolicitacao;
    public javax.swing.JTabbedPane tabsolicitacao;
    public javax.swing.JTabbedPane tabsolicitacaointerna;
    public static javax.swing.JTextField txtNumeroSolicitacao;
    public static javax.swing.JTextField txtdata;
    public static javax.swing.JTextField txtpesquisa;
    public static javax.swing.JTextField txtsolicitante;
    public static javax.swing.JTextField txtstatus;
    // End of variables declaration//GEN-END:variables
}

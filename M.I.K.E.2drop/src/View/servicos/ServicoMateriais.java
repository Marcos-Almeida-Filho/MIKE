/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.servicos;

import Bean.OSBean;
import Bean.ServicoMateriaisBean;
import Bean.ServicoMateriaisDocumentosBean;
import Bean.ServicoMateriaisMovimentacaoBean;
import Bean.ServicoPedidoBean;
import Bean.ServicoPedidoDocumentosBean;
import DAO.OSDAO;
import DAO.ServicoMateriaisDAO;
import DAO.ServicoMateriaisDocumentosDAO;
import DAO.ServicoMateriaisMovimentacaoDAO;
import DAO.ServicoPedidoDAO;
import DAO.ServicoPedidoDocumentosDAO;
import Methods.SendEmail;
import View.TelaPrincipal;
import static View.TelaPrincipal.jDesktopPane1;
import static View.servicos.OS.radioreconstrucao;
import static View.servicos.OS.radiotopo;
import static View.servicos.OS.txtfinal;
import static View.servicos.OS.txtfrontal;
import static View.servicos.OS.txtinicial;
import static View.servicos.OS.txtmortas;
import static View.servicos.OS.txtnumeroos;
import static View.servicos.OS.txtraio;
import static View.servicos.OS.txtstatus;
import static View.servicos.PedidoServico.camposeditaveis;
import static View.servicos.PedidoServico.readitenscobranca;
import static View.servicos.PedidoServico.readitensretorno;
import static View.servicos.PedidoServico.tabledocumentos;
import static View.servicos.PedidoServico.txtclientepedido;
import static View.servicos.PedidoServico.txtcondicao;
import static View.servicos.PedidoServico.txtnfcliente;
import static View.servicos.PedidoServico.txtnotes;
import static View.servicos.PedidoServico.txtnumeropedido;
import static View.servicos.PedidoServico.txtorcamento;
import static View.servicos.PedidoServico.txtrepresentante;
import static View.servicos.PedidoServico.txtstatusretorno;
import static View.servicos.PedidoServico.txtvalorcobranca;
import static View.servicos.PedidoServico.txtvalorretorno;
import static View.servicos.PedidoServico.txtvendedor;
import java.awt.AWTException;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import static java.nio.file.StandardCopyOption.COPY_ATTRIBUTES;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos Filho
 */
public class ServicoMateriais extends javax.swing.JInternalFrame {

    /**
     * Creates new form MateriaisServico
     */
    public ServicoMateriais() {
        initComponents();
        readtablemateriais();
    }

    public static void readtablemateriais() {
        DefaultTableModel model = (DefaultTableModel) tablelistamaterialservico.getModel();
        model.setRowCount(0);
        ServicoMateriaisDAO smd = new ServicoMateriaisDAO();

        for (ServicoMateriaisBean cb : smd.read()) {
            model.addRow(new Object[]{
                cb.getId(),
                cb.getCodigo(),
                cb.getDescricao()
            });
        }
    }

    public static void zeracampos() {
        txtid.setText("");
        txtcodigo.setText("");
        txtestoque.setText("");
        txtdesc.setText("");
        txtgrupo.setText("");
        DefaultTableModel modelmov = (DefaultTableModel) tableestoque.getModel();
        modelmov.setNumRows(0);
        txtcodigo.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tabmateriaisservico = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablelistamaterialservico = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtpesquisa = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        txtdesc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtestoque = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tabopcoes = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableestoque = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtgrupo = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabledocumentos = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jLabel7.setText("jLabel7");

        jTextField7.setText("jTextField7");

        jLabel6.setText("jLabel6");

        jTextField6.setText("jTextField6");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setClosable(true);
        setTitle("Produtos de Serviço");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tablelistamaterialservico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablelistamaterialservico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablelistamaterialservicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablelistamaterialservico);
        if (tablelistamaterialservico.getColumnModel().getColumnCount() > 0) {
            tablelistamaterialservico.getColumnModel().getColumn(0).setMinWidth(40);
            tablelistamaterialservico.getColumnModel().getColumn(0).setPreferredWidth(40);
            tablelistamaterialservico.getColumnModel().getColumn(0).setMaxWidth(40);
            tablelistamaterialservico.getColumnModel().getColumn(1).setMinWidth(230);
            tablelistamaterialservico.getColumnModel().getColumn(1).setPreferredWidth(230);
            tablelistamaterialservico.getColumnModel().getColumn(1).setMaxWidth(230);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto"));

        jLabel3.setText("Pesquisa");

        txtpesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpesquisaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtpesquisa)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(160, 160, 160)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabmateriaisservico.addTab("Lista de Produtos", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Material"));

        jLabel1.setText("Código");

        jLabel2.setText("Descrição");

        txtdesc.setToolTipText("Padrão: Código - Diam x Comprimento");

        jLabel5.setText("ID");

        txtid.setEditable(false);
        txtid.setBackground(new java.awt.Color(255, 255, 255));

        txtestoque.setEditable(false);
        txtestoque.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Estoque");

        jLabel9.setText("Exemplo: Código - Diam x Comprimento Canal x Comprimento Total");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtestoque, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtestoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tableestoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Qtde Inicial", "Qtde Movimentada", "Tipo de Movimentação", "Saldo", "Data", "Usuário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableestoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableestoqueMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableestoqueMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tableestoque);
        if (tableestoque.getColumnModel().getColumnCount() > 0) {
            tableestoque.getColumnModel().getColumn(0).setMinWidth(0);
            tableestoque.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableestoque.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabopcoes.addTab("Estoque", jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Grupo");

        txtgrupo.setEditable(false);
        txtgrupo.setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setText("Pesquisar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtgrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(387, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtgrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(349, Short.MAX_VALUE))
        );

        tabopcoes.addTab("Grupo de Processos", jPanel7);

        tabledocumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "ID", "IDmaterial", "Descrição", "Local", "Local Original"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabledocumentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabledocumentosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabledocumentos);
        if (tabledocumentos.getColumnModel().getColumnCount() > 0) {
            tabledocumentos.getColumnModel().getColumn(0).setMinWidth(40);
            tabledocumentos.getColumnModel().getColumn(0).setPreferredWidth(40);
            tabledocumentos.getColumnModel().getColumn(0).setMaxWidth(40);
            tabledocumentos.getColumnModel().getColumn(1).setMinWidth(0);
            tabledocumentos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tabledocumentos.getColumnModel().getColumn(1).setMaxWidth(0);
            tabledocumentos.getColumnModel().getColumn(2).setMinWidth(0);
            tabledocumentos.getColumnModel().getColumn(2).setPreferredWidth(0);
            tabledocumentos.getColumnModel().getColumn(2).setMaxWidth(0);
            tabledocumentos.getColumnModel().getColumn(5).setMinWidth(0);
            tabledocumentos.getColumnModel().getColumn(5).setPreferredWidth(0);
            tabledocumentos.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        jButton3.setText("Incluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Excluir");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        tabopcoes.addTab("Documentos", jPanel2);

        jButton5.setText("Novo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabopcoes)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabopcoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        tabmateriaisservico.addTab("Detalhes Produto", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabmateriaisservico)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabmateriaisservico)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ProcurarGrupoDeProcessosServico p = new ProcurarGrupoDeProcessosServico();
        JDesktopPane desk = this.getDesktopPane();
        desk.add(p);
        Dimension desktopsize = jDesktopPane1.getSize();
        Dimension jinternalframesize = p.getSize();
        p.setLocation((desktopsize.width - jinternalframesize.width) / 2, (desktopsize.height - jinternalframesize.height) / 2);
        p.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Calendar c = Calendar.getInstance();
        String pattern = "dd/MM/yyyy HH:mm:ss";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        String data = simpleDateFormat.format(c.getTime());
        if (txtid.getText().equals("")) {
            //Criar material
            ServicoMateriaisBean smb = new ServicoMateriaisBean();
            ServicoMateriaisDAO smd = new ServicoMateriaisDAO();

            smb.setCodigo(txtcodigo.getText());
            smb.setDescricao(txtdesc.getText());
            smb.setEstoque(0);
            smb.setGrupo_de_processos(txtgrupo.getText());
            smb.setData(data);
            try {
                //codigo, descricao, estoque, grupo_de_processos
                smd.create(smb);
            } catch (AWTException | IOException ex) {
                Logger.getLogger(ServicoMateriais.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Ler id do material criado
            int idcriado = 0;

            for (ServicoMateriaisBean smb2 : smd.readcreated(txtcodigo.getText(), data)) {
                idcriado = smb2.getId();
            }

            //Criar movimentação inicial
            ServicoMateriaisMovimentacaoBean smmb = new ServicoMateriaisMovimentacaoBean();
            ServicoMateriaisMovimentacaoDAO smmd = new ServicoMateriaisMovimentacaoDAO();

            smmb.setIdmaterial(idcriado);
            smmb.setInicial(0);
            smmb.setMovimentada(0);
            smmb.setTipo("Criação");
            smmb.setSaldo(0);
            smmb.setData(data);
            smmb.setUsuario(TelaPrincipal.lblapelido.getText());

            //idmaterial, inicial, movimentada, tipo, saldo, data, usuario
            smmd.create(smmb);

            //Criar documentos do material
            ServicoMateriaisDocumentosBean smdb = new ServicoMateriaisDocumentosBean();
            ServicoMateriaisDocumentosDAO smdd = new ServicoMateriaisDocumentosDAO();

            for (int i = 0; i < tabledocumentos.getRowCount(); i++) {
                File fileoriginal = new File(tabledocumentos.getValueAt(i, 5).toString());
                File folder = new File("Q:/MIKE_ERP/mat_ser_arq/" + idcriado);
                File filecopy = new File(folder + "/" + fileoriginal.getName());

                folder.mkdirs();
                try {
                    Files.copy(fileoriginal.toPath(), filecopy.toPath(), COPY_ATTRIBUTES);
                } catch (IOException ex) {
                    Logger.getLogger(DocumentosOrcamentoServico.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Erro ao salvar!\n" + ex + "\nEnviando e-mail para suporte.");
                    try {
                        SendEmail.EnviarErro(ex.toString());
                        JOptionPane.showMessageDialog(rootPane, "E-mail com erro enviado com sucesso!");
                    } catch (HeadlessException hex) {
                        JOptionPane.showMessageDialog(rootPane, "Erro!\n" + hex);
                    } catch (AWTException | IOException ex1) {
                        Logger.getLogger(DocumentosOrcamentoServico.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                }
                smdb.setIdmaterial(idcriado);
                smdb.setDescricao(tabledocumentos.getValueAt(i, 3).toString());
                smdb.setLocal(filecopy.toString());

                //idmaterial, descricao, local
                smdd.create(smdb);
            }

            //Ações extras para deixar tela limpa e organizada
            zeracampos();
            tabmateriaisservico.setSelectedIndex(0);
            readtablemateriais();
            JOptionPane.showMessageDialog(rootPane, "Salvo com sucesso!");
        } else {
            ServicoMateriaisBean smb = new ServicoMateriaisBean();
            ServicoMateriaisDAO smd = new ServicoMateriaisDAO();

            smb.setCodigo(txtcodigo.getText());
            smb.setDescricao(txtdesc.getText());
            smb.setEstoque(Integer.parseInt(txtestoque.getText()));
            smb.setGrupo_de_processos(txtgrupo.getText());
            smb.setId(Integer.parseInt(txtid.getText()));
            //codigo, descricao, estoque, grupo_de_processos
            smd.update(smb);

            //Criar documentos do material que não estavam antes no cadastro
            ServicoMateriaisDocumentosBean smdb = new ServicoMateriaisDocumentosBean();
            ServicoMateriaisDocumentosDAO smdd = new ServicoMateriaisDocumentosDAO();

            for (int i = 0; i < tabledocumentos.getRowCount(); i++) {
                if (tabledocumentos.getValueAt(i, 1).equals("")) {
                    File fileoriginal = new File(tabledocumentos.getValueAt(i, 5).toString());
                    File folder = new File("Q:/MIKE_ERP/mat_ser_arq/" + txtid.getText());
                    File filecopy = new File(folder + "/" + fileoriginal.getName());

                    folder.mkdirs();
                    try {
                        Files.copy(fileoriginal.toPath(), filecopy.toPath(), COPY_ATTRIBUTES);
                    } catch (IOException ex) {
                        Logger.getLogger(DocumentosOrcamentoServico.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Erro ao salvar!\n" + ex + "\nEnviando e-mail para suporte.");
                        try {
                            SendEmail.EnviarErro(ex.toString());
                            JOptionPane.showMessageDialog(rootPane, "E-mail com erro enviado com sucesso!");
                        } catch (HeadlessException hex) {
                            JOptionPane.showMessageDialog(rootPane, "Erro!\n" + hex);
                        } catch (AWTException | IOException ex1) {
                            Logger.getLogger(DocumentosOrcamentoServico.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }
                    smdb.setIdmaterial(Integer.parseInt(txtid.getText()));
                    smdb.setDescricao(tabledocumentos.getValueAt(i, 3).toString());
                    smdb.setLocal(filecopy.toString());

                    //idmaterial, descricao, local
                    smdd.create(smdb);
                }
            }
        }
        readtablemateriais();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablelistamaterialservicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablelistamaterialservicoMouseClicked
        if (evt.getClickCount() == 2) {
            tabmateriaisservico.setSelectedIndex(1);

            txtid.setText(tablelistamaterialservico.getValueAt(tablelistamaterialservico.getSelectedRow(), 0).toString());

            ServicoMateriaisDAO smd = new ServicoMateriaisDAO();

            for (ServicoMateriaisBean smb : smd.click(Integer.parseInt(txtid.getText()))) {
                txtcodigo.setText(smb.getCodigo());
                txtdesc.setText(smb.getDescricao());
                txtestoque.setText(String.valueOf(smb.getEstoque()));
                txtgrupo.setText(smb.getGrupo_de_processos());
            }

            DefaultTableModel modelmov = (DefaultTableModel) tableestoque.getModel();
            modelmov.setNumRows(0);
            ServicoMateriaisMovimentacaoDAO smmd = new ServicoMateriaisMovimentacaoDAO();

            for (ServicoMateriaisMovimentacaoBean smmb : smmd.read(Integer.parseInt(txtid.getText()))) {
                modelmov.addRow(new Object[]{
                    smmb.getId(),
                    smmb.getInicial(),
                    smmb.getMovimentada(),
                    smmb.getTipo(),
                    smmb.getSaldo(),
                    smmb.getData(),
                    smmb.getUsuario()
                });
            }

            DefaultTableModel modeldoc = (DefaultTableModel) tabledocumentos.getModel();
            modeldoc.setNumRows(0);

            ServicoMateriaisDocumentosDAO smdd = new ServicoMateriaisDocumentosDAO();

            for (ServicoMateriaisDocumentosBean smdb : smdd.read(Integer.parseInt(txtid.getText()))) {
                modeldoc.addRow(new Object[]{
                    false,
                    smdb.getId(),
                    smdb.getIdmaterial(),
                    smdb.getDescricao(),
                    smdb.getLocal(),
                    ""
                });
            }
        }
    }//GEN-LAST:event_tablelistamaterialservicoMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int resp = JOptionPane.showConfirmDialog(rootPane, "Deseja cadastrar um novo material de serviço?", "Novo Material de Serviço", JOptionPane.YES_NO_OPTION);
        if (resp == 0) {
            zeracampos();
            DefaultTableModel model = (DefaultTableModel) tabledocumentos.getModel();
            model.setNumRows(0);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DocumentosMateriaisServico dms = new DocumentosMateriaisServico();
        JDesktopPane desk = this.getDesktopPane();
        desk.add(dms);
        Dimension desktopsize = jDesktopPane1.getSize();
        Dimension jinternalframesize = dms.getSize();
        dms.setLocation((desktopsize.width - jinternalframesize.width) / 2, (desktopsize.height - jinternalframesize.height) / 2);
        dms.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tabledocumentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabledocumentosMouseClicked
        if (evt.getClickCount() == 2) {
            Desktop desk = Desktop.getDesktop();
            try {
                desk.open(new File((String) tabledocumentos.getValueAt(tabledocumentos.getSelectedRow(), 4)));
            } catch (IOException ex) {
                Logger.getLogger(DocumentosOrcamentoServico.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tabledocumentosMouseClicked

    private void tableestoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableestoqueMouseClicked
        //Criar string com tipo da movimentação
        String tipo = tableestoque.getValueAt(tableestoque.getSelectedRow(), 3).toString();
        String tipo2 = tipo.substring(0, 2);
        if (evt.getButton() == 3) {
            if (tipo2.equals("OS")) {
                JPopupMenu menu = new JPopupMenu();
                JMenuItem das = new JMenuItem("Abrir " + tipo);

                das.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent ae) {
                        String OS = tipo.substring(3, tipo.length());
                        if (OS.equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Produto sem OS");
                        } else {
                            OS p = new OS();
                            jDesktopPane1.add(p);
                            p.setVisible(true);
                            try {
                                p.setMaximum(true);
                            } catch (PropertyVetoException ex) {
                                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            p.txtnumeroos.setText(OS);
                            p.tabos.setSelectedIndex(1);

                            OSDAO od = new OSDAO();

                            for (OSBean ob : od.click(txtnumeroos.getText())) {
                                p.txtabertura.setText(ob.getDataabertura());
                                p.txtprevisao.setText(ob.getDataprevisao());
                                txtstatus.setText(ob.getStatus());
                                txtclientepedido.setText(ob.getCliente());
                                txtcodigo.setText(ob.getCodigo());
                                txtdesc.setText(ob.getDescricao());
                                txtinicial.setText(String.valueOf(ob.getQtdinicial()));
                                txtfinal.setText(String.valueOf(ob.getQtdok()));
                                txtmortas.setText(String.valueOf(ob.getQtdnaook()));
                                txtnotes.setText(ob.getNotes());
                                if (ob.getTopo().equals("true")) {
                                    radiotopo.setSelected(true);
                                }
                                if (ob.getReconstrucao().equals("true")) {
                                    radioreconstrucao.setSelected(true);
                                }
                                if (ob.getCompleta().equals("true")) {
                                    p.radiocompleta.setSelected(true);
                                }
                                txtraio.setText(ob.getRaio());
                                txtfrontal.setText(ob.getFrontal());

                            }

                            //Pegar documentos
                            p.readdocs();

                            //Pegar processos
                            p.readprocessos();

                            //Travar campos de acordo com status da op
                            p.travarcampos();
                        }
                    }
                });

                menu.add(das);

                menu.show(evt.getComponent(), evt.getPoint().x, evt.getPoint().y);
            } else {
                JPopupMenu menu = new JPopupMenu();
                JMenuItem das = new JMenuItem("Abrir " + tipo);

                das.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        String DAS = tipo.substring(4, tipo.length());
                        if (DAS.equals("")) {
                            JOptionPane.showMessageDialog(rootPane, "Produto sem DAS");
                        } else {
                            PedidoServico p = new PedidoServico();
                            jDesktopPane1.add(p);
                            p.setVisible(true);
                            try {
                                p.setMaximum(true);
                            } catch (PropertyVetoException ex) {
                                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            PedidoServico.txtnumeropedido.setText(DAS);
                            PedidoServico.tabpedidos.setSelectedIndex(1);

                            ServicoPedidoDAO spd = new ServicoPedidoDAO();

                            for (ServicoPedidoBean spb : spd.click(PedidoServico.txtnumeropedido.getText())) {
                                PedidoServico.txtclientepedido.setText(spb.getCliente());
                                PedidoServico.txtcondicao.setText(spb.getCondicao());
                                PedidoServico.txtrepresentante.setText(spb.getRepresentante());
                                PedidoServico.txtvendedor.setText(spb.getVendedor());
                                PedidoServico.txtstatusretorno.setText(spb.getStatus_retorno());
                                PedidoServico.txtstatuscobranca.setText(spb.getStatus_cobranca());
                                PedidoServico.txtnotes.setText(spb.getNotes());
                                PedidoServico.txtorcamento.setText(String.valueOf(spb.getIdorcamento()));
                                PedidoServico.txtnfcliente.setText(spb.getNfcliente());
                            }

                            camposeditaveis();

                            readitenscobranca();

                            txtvalorcobranca();

                            readitensretorno();

                            txtvalorretorno();

                            DefaultTableModel modeldoc = (DefaultTableModel) tabledocumentos.getModel();
                            modeldoc.setNumRows(0);
                            ServicoPedidoDocumentosDAO spdd = new ServicoPedidoDocumentosDAO();

                            for (ServicoPedidoDocumentosBean spdb : spdd.readitens(txtnumeropedido.getText())) {
                                modeldoc.addRow(new Object[]{
                                    false,
                                    spdb.getId(),
                                    spdb.getDescricao(),
                                    spdb.getLocal(),});
                            }
                        }
                    }
                });

                menu.add(das);

                menu.show(evt.getComponent(), evt.getPoint().x, evt.getPoint().y);
            }
        }
    }//GEN-LAST:event_tableestoqueMouseClicked

    private void tableestoqueMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableestoqueMouseReleased
        int r = tableestoque.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < tableestoque.getRowCount()) {
            tableestoque.setRowSelectionInterval(r, r);
        } else {
            tableestoque.clearSelection();
        }
    }//GEN-LAST:event_tableestoqueMouseReleased

    private void txtpesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisaKeyReleased
        DefaultTableModel model = (DefaultTableModel) tablelistamaterialservico.getModel();
        model.setNumRows(0);
        ServicoMateriaisDAO smd = new ServicoMateriaisDAO();

        for (ServicoMateriaisBean sob : smd.pesquisa(txtpesquisa.getText())) {
            model.addRow(new Object[]{
                sob.getId(),
                sob.getCodigo(),
                sob.getDescricao()
            });
        }
    }//GEN-LAST:event_txtpesquisaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    public static javax.swing.JTable tabledocumentos;
    public static javax.swing.JTable tableestoque;
    public static javax.swing.JTable tablelistamaterialservico;
    public static javax.swing.JTabbedPane tabmateriaisservico;
    private javax.swing.JTabbedPane tabopcoes;
    public static javax.swing.JTextField txtcodigo;
    public static javax.swing.JTextField txtdesc;
    public static javax.swing.JTextField txtestoque;
    public static javax.swing.JTextField txtgrupo;
    public static javax.swing.JTextField txtid;
    private javax.swing.JTextField txtpesquisa;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.logistica;

import DAO.RastreamentoDocumentosDAO;
import Methods.Dates;
import Methods.ReadXMLDocumento;
import Methods.SendEmail;
import java.awt.AWTException;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Marcos Filho
 */
public class ProcuraXML extends javax.swing.JInternalFrame {

    /**
     * Creates new form Documentos
     */
    public ProcuraXML() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooser = new javax.swing.JFileChooser();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setTitle("Escolha de Documento");

        chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooserActionPerformed
        File fileoriginal = chooser.getSelectedFile();
        if (evt.getActionCommand().equals("ApproveSelection")) {
            try {
                DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder dBuilder = null;
                try {
                    dBuilder = dbFactory.newDocumentBuilder();
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(ReadXMLDocumento.class.getName()).log(Level.SEVERE, null, ex);
                }
                Document doc = null;
                try {
                    doc = dBuilder.parse(fileoriginal);
                } catch (SAXException | IOException ex) {
                    Logger.getLogger(ReadXMLDocumento.class.getName()).log(Level.SEVERE, null, ex);
                }

                //optional, but recommended
                //read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
                doc.getDocumentElement().normalize();

//                System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
//
//                NodeList nList = doc.getElementsByTagName("staff");
//
//                System.out.println("----------------------------");
//
//                for (int temp = 0; temp < nList.getLength(); temp++) {
//
//                    Node nNode = nList.item(temp);
//
//                    System.out.println("\nCurrent Element :" + nNode.getNodeName());
//
//                    if (nNode.getNodeType() == Node.ELEMENT_NODE) {
//
//                        Element eElement = (Element) nNode;
//
//                        System.out.println("Staff id : " + eElement.getAttribute("id"));
//                        System.out.println("First Name : " + eElement.getElementsByTagName("firstname").item(0).getTextContent());
//                        System.out.println("Last Name : " + eElement.getElementsByTagName("lastname").item(0).getTextContent());
//                        System.out.println("Nick Name : " + eElement.getElementsByTagName("nickname").item(0).getTextContent());
//                        System.out.println("Salary : " + eElement.getElementsByTagName("salary").item(0).getTextContent());
//
//                    }
//                }
                //Buscar Cliente
                NodeList clilist = doc.getElementsByTagName("xNome");
                Node clinode = clilist.item(0);

                //Buscar Emissão
                NodeList emilist = doc.getElementsByTagName("dhEmi");
                Node eminode = emilist.item(0);

                //Buscar Número
                NodeList numlist = doc.getElementsByTagName("nNF");
                Node numnode = numlist.item(0);

                //Colocar informações nos txts correspondentes
                RastreamentoDocumentos.txtemitente.setText(clinode.getTextContent());
                RastreamentoDocumentos.txtemissao.setText(Dates.dataxml(eminode.getTextContent()));
                RastreamentoDocumentos.txtnumero.setText(numnode.getTextContent());

                //Endereço XML
                RastreamentoDocumentos.txtxml.setText(fileoriginal.toString());
            } catch (DOMException e) {
                JOptionPane.showMessageDialog(null, "Erro ao ler arquivo!\n" + e);
                try {
                    SendEmail.EnviarErro("Erro ao ler arquivo!\n" + e.toString());
                } catch (AWTException | IOException ex) {
                    Logger.getLogger(RastreamentoDocumentosDAO.class.getName()).log(Level.SEVERE, null, ex);
                }
                dispose();
            }
            if (evt.getActionCommand().equals("CancelSelection")) {
                dispose();
            }
        }
    }//GEN-LAST:event_chooserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JFileChooser chooser;
    // End of variables declaration//GEN-END:variables
}
